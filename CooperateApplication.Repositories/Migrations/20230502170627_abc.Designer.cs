// <auto-generated />
using System;
using CooperateApplication.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CooperateApplication.Repositories.Migrations
{
    [DbContext(typeof(CooperationDbContext))]
    [Migration("20230502170627_abc")]
    partial class abc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.ClassStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MajorsId")
                        .HasColumnType("int")
                        .HasColumnName("MaNganh");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenLop");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("MajorsId");

                    b.ToTable("Lop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3263),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19T1",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3458),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19T2",
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3479),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19C1",
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3499),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19C2",
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3519),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19CDT1",
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3574),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19CDT2",
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3655),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19DT1",
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(3986),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19DT2",
                            Status = false
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4014),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19TDH1",
                            Status = false
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4038),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19TDH2",
                            Status = false
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4059),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19MT1",
                            Status = false
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4080),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19MT2",
                            Status = false
                        },
                        new
                        {
                            Id = 13,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4100),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19SK1",
                            Status = false
                        },
                        new
                        {
                            Id = 14,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4120),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19XD1",
                            Status = false
                        },
                        new
                        {
                            Id = 15,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4140),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19XD2",
                            Status = false
                        },
                        new
                        {
                            Id = 16,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4160),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19XC1",
                            Status = false
                        },
                        new
                        {
                            Id = 17,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4180),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "19XC2",
                            Status = false
                        },
                        new
                        {
                            Id = 18,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4202),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20T1",
                            Status = false
                        },
                        new
                        {
                            Id = 19,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4223),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20T2",
                            Status = false
                        },
                        new
                        {
                            Id = 20,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4243),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20C1",
                            Status = false
                        },
                        new
                        {
                            Id = 21,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4263),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20C2",
                            Status = false
                        },
                        new
                        {
                            Id = 22,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4283),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20CDT1",
                            Status = false
                        },
                        new
                        {
                            Id = 23,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4303),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20CDT2",
                            Status = false
                        },
                        new
                        {
                            Id = 24,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4347),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20DT1",
                            Status = false
                        },
                        new
                        {
                            Id = 25,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4369),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20DT2",
                            Status = false
                        },
                        new
                        {
                            Id = 26,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4389),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20TDH1",
                            Status = false
                        },
                        new
                        {
                            Id = 27,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4410),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20TDH2",
                            Status = false
                        },
                        new
                        {
                            Id = 28,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4430),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20MT1",
                            Status = false
                        },
                        new
                        {
                            Id = 29,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4450),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20MT2",
                            Status = false
                        },
                        new
                        {
                            Id = 30,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4470),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20SK1",
                            Status = false
                        },
                        new
                        {
                            Id = 31,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4490),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20XD1",
                            Status = false
                        },
                        new
                        {
                            Id = 32,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4511),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20XD2",
                            Status = false
                        },
                        new
                        {
                            Id = 33,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4531),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20XC1",
                            Status = false
                        },
                        new
                        {
                            Id = 34,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4553),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "20XC2",
                            Status = false
                        },
                        new
                        {
                            Id = 35,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4573),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21T1",
                            Status = false
                        },
                        new
                        {
                            Id = 36,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4594),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21T2",
                            Status = false
                        },
                        new
                        {
                            Id = 37,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4615),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21C1",
                            Status = false
                        },
                        new
                        {
                            Id = 38,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4634),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21C2",
                            Status = false
                        },
                        new
                        {
                            Id = 39,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4655),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21CDT1",
                            Status = false
                        },
                        new
                        {
                            Id = 40,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4675),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21CDT2",
                            Status = false
                        },
                        new
                        {
                            Id = 41,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4695),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21DT1",
                            Status = false
                        },
                        new
                        {
                            Id = 42,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4714),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21DT2",
                            Status = false
                        },
                        new
                        {
                            Id = 43,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4788),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21TDH1",
                            Status = false
                        },
                        new
                        {
                            Id = 44,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4811),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21TDH2",
                            Status = false
                        },
                        new
                        {
                            Id = 45,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4831),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21MT1",
                            Status = false
                        },
                        new
                        {
                            Id = 46,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4851),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21MT2",
                            Status = false
                        },
                        new
                        {
                            Id = 47,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4871),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21SK1",
                            Status = false
                        },
                        new
                        {
                            Id = 48,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4891),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21XD1",
                            Status = false
                        },
                        new
                        {
                            Id = 49,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4910),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21XD2",
                            Status = false
                        },
                        new
                        {
                            Id = 50,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4931),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21XC1",
                            Status = false
                        },
                        new
                        {
                            Id = 51,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(4951),
                            IsDeleted = false,
                            MajorsId = 1,
                            Name = "21XC2",
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenKhoa");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("MaTruong");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Khoa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1777),
                            IsDeleted = false,
                            Name = "Khoa Công Nghệ Số",
                            Status = false,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1916),
                            IsDeleted = false,
                            Name = "Khoa Điện - Điện Tử",
                            Status = false,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1941),
                            IsDeleted = false,
                            Name = "Khoa Cơ Khí",
                            Status = false,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1971),
                            IsDeleted = false,
                            Name = "Khoa Xây Dựng",
                            Status = false,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1992),
                            IsDeleted = false,
                            Name = "Khoa Hóa Học và Môi Trường",
                            Status = false,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2022),
                            IsDeleted = false,
                            Name = "Khoa Sư Phạm Công Nghiệp",
                            Status = false,
                            UniversityId = 1
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CorporateTaxCode")
                        .HasColumnType("text")
                        .HasColumnName("MaSoThue");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("GioiThieu");

                    b.Property<string>("Director")
                        .HasColumnType("text")
                        .HasColumnName("GiamDoc");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ImageLogo")
                        .HasColumnType("text")
                        .HasColumnName("Logo");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenDoanhNghiep");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("SoDienThoai");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DoanhNghiep");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 201, DateTimeKind.Utc).AddTicks(850),
                            Description = "Là doanh nghiệp phát triển các phần mềm ứng dụng chất lượng ca và ổn định",
                            Email = "hr@gmail.com",
                            IsDeleted = false,
                            Name = "Test Company",
                            Phone = "0325867435",
                            Status = true,
                            Website = "https://www.google.com.vn/"
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int")
                        .HasColumnName("MaDoanhNghiep");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("NhanVien");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 375, DateTimeKind.Utc).AddTicks(5703),
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Status = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 549, DateTimeKind.Utc).AddTicks(8020),
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Status = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("text")
                        .HasColumnName("DiaChiCuThe");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int")
                        .HasColumnName("MaDoanhNghiep");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("ChiNhanhDoanhNghiep");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 549, DateTimeKind.Utc).AddTicks(9803),
                            DetailAddress = "Tầng 23, Tòa nhà ACB Bank - Đường 3/2 Thuận Phước Đà Nẵng",
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(34),
                            DetailAddress = "Tầng 13, Tòa nhà Viettin Bank - Đường Hùng Vương Hải Châu Đà Nẵng",
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int")
                        .HasColumnName("MaDoanhNghiep");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenLinhVuc");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("LinhVucKinhDoanh");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(610),
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Name = "Software",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(717),
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Name = "Giải trí/ Game",
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(749),
                            EnterpriseId = 1,
                            IsDeleted = false,
                            Name = "Dịch vụ IT",
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Majors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("MaKhoa");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenNganh");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Nganh");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2652),
                            DepartmentId = 1,
                            IsDeleted = false,
                            Name = "Ngành Công Nghệ Thông Tin",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2741),
                            DepartmentId = 2,
                            IsDeleted = false,
                            Name = "Ngành Tự Động Hóa",
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2764),
                            DepartmentId = 2,
                            IsDeleted = false,
                            Name = "Ngành Điện - Điện Tử",
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2784),
                            DepartmentId = 3,
                            IsDeleted = false,
                            Name = "Ngành Công nghệ kỹ thuật cơ khí",
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2803),
                            DepartmentId = 3,
                            IsDeleted = false,
                            Name = "Ngành Công nghệ kỹ thuật cơ điện tử",
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2825),
                            DepartmentId = 4,
                            IsDeleted = false,
                            Name = "Ngành Công nghệ kỹ thuật xây dựng",
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2845),
                            DepartmentId = 4,
                            IsDeleted = false,
                            Name = "Ngành Công nghệ kỹ thuật xây dựng cầu đường",
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(2864),
                            DepartmentId = 5,
                            IsDeleted = false,
                            Name = "Ngành Kỹ Thuật môi trường",
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("NoiDung");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("HinhAnh");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("TieuDe");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("MoTa");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int")
                        .HasColumnName("MaDoanhNghiep");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime")
                        .HasColumnName("HanCuoi");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("HinhAnh");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("SoLuong");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("TieuDe");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("LoaiBai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("BaiDang");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.PostMajors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MajorsId")
                        .HasColumnType("int")
                        .HasColumnName("MaNganh");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("MaBaiDang");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("MajorsId");

                    b.HasIndex("PostId");

                    b.ToTable("NganhBaiDang");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.PostStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsAccept")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("DuyetDangKi");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("MaBaiDang");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("MaSinhVien");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("StudentId");

                    b.ToTable("SinhVienTuyenDung");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .HasColumnType("text")
                        .HasColumnName("TenQuyen");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.ToTable("Quyen");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 25, 996, DateTimeKind.Utc).AddTicks(2659),
                            IsDeleted = false,
                            RoleName = "Administrator",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 25, 997, DateTimeKind.Utc).AddTicks(1360),
                            IsDeleted = false,
                            RoleName = "EmployeeHRM",
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 25, 997, DateTimeKind.Utc).AddTicks(1436),
                            IsDeleted = false,
                            RoleName = "EmployeeAdmin",
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 25, 997, DateTimeKind.Utc).AddTicks(1454),
                            IsDeleted = false,
                            RoleName = "Student",
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.SenimarStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("MaBaiDang");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("MaSinhVien");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("StudentId");

                    b.ToTable("SinhVienHoiThao");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.SlideImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("HinhAnh");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("KichHoat");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("MaLop");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("FileCV")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("DiaChi");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("Introduction")
                        .HasColumnType("text")
                        .HasColumnName("GioiThieu");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("TenTruong");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.HasKey("Id");

                    b.ToTable("Truong");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Đà Nẵng",
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 550, DateTimeKind.Utc).AddTicks(1280),
                            Introduction = "description",
                            IsDeleted = false,
                            Name = "Test University",
                            Status = false
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime")
                        .HasColumnName("NgaySinh");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("text")
                        .HasColumnName("DiaChiCuThe");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("Ten");

                    b.Property<bool>("Gender")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("GioiTinh");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("MatKhau");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("SoDienThoai");

                    b.Property<string>("ProvinceAddress")
                        .HasColumnType("text")
                        .HasColumnName("DiaChi");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("TaiKhoan");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("LoaiNguoiDung");

                    b.HasKey("Id");

                    b.ToTable("NguoiDung");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 200, DateTimeKind.Utc).AddTicks(8712),
                            Email = "qtrv@gmail.com",
                            FullName = "Quản trị viên",
                            Gender = false,
                            IsDeleted = false,
                            Password = "$2a$11$YlLGQfQQIUbZB6W/GX9U/.R5P10UkmS2p5h3W/ZpGh9SWGzPIijl2",
                            Phone = "0987654321",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UserName = "admin",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 375, DateTimeKind.Utc).AddTicks(4034),
                            FullName = "Employee HRM",
                            Gender = false,
                            IsDeleted = false,
                            Password = "$2a$11$3r4Gy7cqW0I2cW13aVkL6O2lWIE394dYysdEttyo1Hq6XI0gbbzuG",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UserName = "employee_hrm",
                            UserType = 1
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 549, DateTimeKind.Utc).AddTicks(7084),
                            FullName = "Employee admin",
                            Gender = false,
                            IsDeleted = false,
                            Password = "$2a$11$LasxMd3SI.jluNseAO088uPEx4QYWbHE8qdm.zVV3Pen3u2o9aiTe",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false,
                            UserName = "employee_admin",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayTao");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("MaQuyen");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("TrangThai");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("NgayChinhSua");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("MaNguoiDung");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("QuyenNguoiDung");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 200, DateTimeKind.Utc).AddTicks(9991),
                            IsDeleted = false,
                            RoleId = 1,
                            Status = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 375, DateTimeKind.Utc).AddTicks(5906),
                            IsDeleted = false,
                            RoleId = 2,
                            Status = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 5, 2, 17, 6, 26, 549, DateTimeKind.Utc).AddTicks(7879),
                            IsDeleted = false,
                            RoleId = 4,
                            Status = false,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.ClassStudent", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Majors", "Majors")
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Majors");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Department", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseEmployee", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseFacility", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.EnterpriseField", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Majors", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Notification", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Post", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.PostMajors", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Majors", "Majors")
                        .WithMany()
                        .HasForeignKey("MajorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Majors");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.PostStudent", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.SenimarStudent", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.Student", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.ClassStudent", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CooperateApplication.Repositories.Entities.UserRole", b =>
                {
                    b.HasOne("CooperateApplication.Repositories.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CooperateApplication.Repositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
